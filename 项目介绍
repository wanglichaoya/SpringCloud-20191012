这个是一个微服务的一个小案例
其中：
  springCloudParent: 是一个父项目 ，有以下子项目
     eurekaServer
     product-data-service2
     product-view-service-ribbon
     springCloudChild1

    同时这个项目又是一个 微服务的项目
         eurekaServer: 是 SpringCloud 注册中心 eureka, 主要用来管理其他 提供服务的 微服务项目

         数据微服务：product-data-service2, 用来提供 数据 ，并返回数据

         视图微服务：product-view-service-ribbon, 用来 展示数据，访问在SpringCloud 注册好的
                    微服务。

      注意： SpringCloud 提供了2种方式 访问 注册中心注册好的微服务，
              1、Ribbon,  通过是： RestTemplate 进行调用，然后进行客户端的负载均衡，由客户端决定
                   访问哪一个 在 SpringCloud注册好的 微服务。

              2、Feign ,  对 Ribbon 进行了封装，用起来更方便。

      什么是客户端的负载均衡？

           启动2个 数据微服务，一个是8001， 一个是8002，Ribbon 会从注册中心 了解到有这么几个
           微服务，然后由Ribbon这个客户端自己决定调用哪个 微服务，这就叫做客户端的负载均衡。

      项目如何运行启动？
        第1步：
           先启动 SpringCloud 注册中心 微服务， eurekaServer;
           访问地址： localhost:8761
        第2步：
           启动 1个或这个多个 数据微服务，用来提供数据，product-data-service2;
           访问地址：http://localhost:8001/products
        第3步：
           启动 视图微服务，用来 访问 在SpringCloud 注册中心注册好的 微服务，然后进行调用，
           product-view-service-ribbon ;
           访问地址：http://localhost:8010/products



       SPringCloud 服务链路追踪：
       如何使用？
         步骤如下：
            1、 需要先下载：zipkin-server-2.10.1-exec.jar
                  下载地址：
                    http://how2j.cn/frontdownload?bean.id=2073
            2、 下载完成以后需要启动链路追踪服务器，
                  启动方式：找到 这个jar包所在的路径
                    java -jar zipkin-server-2.10.1-exec.jar
            3、挨个启动 eureka-server, 改造后的 product-data-service 和 product-view-service-feign 。
            4、启动地址：
                 服务链接追踪器启动地址：
                     http://localhost:9411/zipkin/dependency/
                 视图微服务启动地址
                     localhost:输入的端口号/products

            注意：
                因为视图服务进行了改造，支持了 rabbitMQ, 那么在默认情况下，它的信息就不会进入 Zipkin了。 在Zipkin 里看不到视图服务的资料了。
                为了解决这个问题，在启动 Zipkin 的时候 带一个参数就好了：--zipkin.collector.rabbitmq.addresses=localhost

                即原来的访问方式是
                java -jar zipkin-server-2.10.1-exec.jar

                现在的访问方式改成 下面的这种即可：
                java -jar zipkin-server-2.10.1-exec.jar --zipkin.collector.rabbitmq.addresses=localhost


        SpringCloud 配置服务器：
          如何使用：
            第一步： 新建一个 配置服务器 微服务
                     这个应用中对应的是：config-server 微服务


      SpringCloud 配置客户端
        如何启动：
          依次启动： eurekaServer（Eureka注册中心微服务）、
                    config-server(配置服务器)、
                    product-data-service2(数据微服务)、
                    product-view-service-feign(视图微服务)

                    然后访问： http://localhost:8012/products


       SpringCloud 断路器 Hystrix 的配置
          SpringCloud 断路器 Hystrix 是干嘛的？
             本来，视图微服务是要访问数据微服务的，但是当数据微服务一旦被停止的时候，比如说，数据微服务所在的机房停电了，
              这个时候，视图微服务 访问 数据微服务 就会报错，但是这个错误，页面上客户看不懂，所以要解决这个问题。
              于是就有了，当数据微服务 不可访问的时候， 要提供 一种解决方案。
                  比如说提示 数据微服务不可用，这样客户就知道错误的原因了。

          启动方式：
          EurekaServerApplication, ConfigServerApplication, ProductViewServiceFeignApplication。
          先不启动 数据微服务  product-data-service2, 然后直接访问：
            http://localhost:8012/products
          就会提示 数据微服务 不可用。


       SpringCloud 网关 zuul

          启动方式：
            依次启动：
               EurekaServiceApplication->ConfigServerApplication->ProductViewServiceFeignApplication->
               ProductDataServiceApplication->ProductServiceZuulApplication

             SpringCloud Eureka 注册中心-》配置微服务-》视图微服务-》数据微服务-》网关微服务  这样的顺序启动。


